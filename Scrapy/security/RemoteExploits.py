#!:~/anaconda3/bin python3
# -*- encoding: utf-8 -*-

# python 3.6.3 Hammer Dos Script v0.1
# by Jay-Z
# Only for legal purpose 
# Copyright (c) 1995-2017 Beyondsoft (BeiJing) Co.Ltd.
# All Rights reserved

import requests
import json
import os
import urllib.request
import socket
import sys

from lxml import etree

class RemoteExploits(object):

    def __init__(self):
        pass
    def startWork(self, beginPage, endPage, content, remoteTypeURL, header):
        
            for page in range(int(beginPage), int(endPage)+1):
                    
                data = {
                        "action" : "browseByCategory",
                        "pg" :  page,
                        "order_by" : "date_published",
                        "order" : "DESC",
                        "type" : "3"
                    }
                fullurl = remoteTypeURL + "?pg=" + str(page) 
                #send resquest body and recive the html content of request
                remoteContent = requests.get(url=fullurl, headers=header).text
                #format string remoteContent as standard HTML layout and find out the root node of per title. 
                remoteNodeList = etree.HTML(remoteContent).xpath("//table[contains(@class, 'exploit_list')]/*[2]/tr")

                for rootNode in remoteNodeList:
                    #Get the date of target exploit
                    date = rootNode.xpath("./td[contains(@class, 'date')]/text()")[0].strip("\n").strip(" ")
                    #Get the script of exploit
                    scriptURL = rootNode.xpath("./td[contains(@class, 'dlink')]/a/@href")[0].strip("\n").strip(" ")
                    #Get the verify info of exploit
                    verifyInfo = rootNode.xpath("./td[contains(@class, 'verification')]/a/img/@title")[0].strip("\n").strip(" ")
                    #Get the title of exploit
                    title = rootNode.xpath("./td[contains(@class, 'description')]//a/text()")[0].strip("\n").strip(" ")
                    #Get platform
                    platform = rootNode.xpath("./td[contains(@class, 'platform')]//a/text()")[0].strip("\n").strip(" ")
                    #get Author
                    author = rootNode.xpath("./td[contains(@class, 'author')]//a/text()")[0].strip("\n").strip(" ")
                    
                    #Create dict to save exploit info
                    exploit = {
                            "Date" : date,
                            "ScriptURL" : scriptURL,
                            "VerifyInfo" : verifyInfo,
                            "Title" : title,
                            "Platform" : platform,
                            "Author" : author
                        }
                    
                    #Through Script URL, download it
                    self.writeScript(scriptURL, header)
                    
                    #Transform dict to str for saving to a local file
                    exploitStr = json.dumps(exploit)
                    #Save file as json to local
                    self.writeContentPage(exploitStr)
                    
    def writeScript(self, scriptURL, header):
        #set timeout
        socket.setdefaulttimeout(15)

        #Get current os path
        curpath = os.path.abspath(".")
        #Get file name as local file name
        fileName = scriptURL[scriptURL.rfind("/")+1:]
        
        #Save file to DB/ filoder
        #filePath = curpath + "/" + DB + "/"
        filePath = os.path.join(curpath+"/DB/", fileName)
        print(filePath)
        if not os.path.exists(curpath + "/DB/"):
            os.makedirs(curpath + "/DB/")
        
        try:

            #write file to local
            urllib.request.urlretrieve(scriptURL, filePath, self.funProgress)
        
        except socket.timeout as e:
            print("In 15s, no any other flle can be dowbloaded from reomte server, so close the connection...")
            print("Download finishing...")
            sys.exit() 

    def funProgress(self,a, b, c):
        """
            format output
        """
        per = 100.0*a*b/c
        if per > 100:
            per = 100
        print("%.2f%%"%per)

    def writeContentPage(self, content):
        """
            write content with exploit info to local file
        """
        with open("./DB/"+"exploit.txt", "a+") as f:
            f.write(content)



